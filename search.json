[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Kyle Grealis Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Grealis. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grealis K (2024). froggeR: Enhance Quarto Project Workflows Standards. R package version 0.1.0.","code":"@Manual{,   title = {froggeR: Enhance Quarto Project Workflows and Standards},   author = {Kyle Grealis},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"/index.html","id":"why-frogger","dir":"","previous_headings":"","what":"Why froggeR?","title":"Enhance Quarto Project Workflows and Standards","text":"Leap ahead data science journey froggeR! Streamline Quarto workflows reusable templates, catch pesky project setup bugs, hop effortlessly R analyses - lily pad hopping required! Create structured projects ‚Äôll make want croak joy - launch pad amazing data science adventures! üê∏ project setup simple fun! üê∏ Jump Right : Spend time analysis, less time setup Consistent Lily Pads: Maintain uniform document styling structure across projects Setup Bugs: Complex configs un-froggin‚Äô-necessary! Safe Pond: Enhanced data protection comprehensive .gitignore settings Friendly Whole Pod: Easier team onboarding structured documentation Pad, Way: Use ribbiting defaults customize needs every data scientist deserves friendly frog guide!","code":""},{"path":"/index.html","id":"whos-it-for","dir":"","previous_headings":"","what":"Who‚Äôs it for?","title":"Enhance Quarto Project Workflows and Standards","text":"froggeR especially valuable R users : - Juggle multiple Quarto projects - Collaborate team members - Want focus analysis, setup - Need quick way start new projects","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Enhance Quarto Project Workflows and Standards","text":"can install development version froggeR GitHub:","code":"# install.packages(\"remotes\") remotes::install_github('kyleGrealis/froggeR@dev')"},{"path":[]},{"path":"/index.html","id":"id_-enhanced-quarto-project-creation","dir":"","previous_headings":"Key Features","what":"üéØ Enhanced Quarto Project Creation","title":"Enhance Quarto Project Workflows and Standards","text":"quarto_project() function supercharges project setup: creates new Quarto project : - custom YAML-enabled .qmd file - comprehensive .gitignore - structured README.md - reusable _variables.yml - template custom.scss style sheet - .Rproj file","code":"froggeR::quarto_project(   name = \"my_new_project\",   default = TRUE  # Use custom YAML from _variables.yml )"},{"path":"/index.html","id":"id_-reusable-yaml-headers","dir":"","previous_headings":"Key Features","what":"üîÑ Reusable YAML Headers","title":"Enhance Quarto Project Workflows and Standards","text":"Maintain consistency across documents write_variables(): interactive function helps create _variables.yml file containing: - Author information - Contact details - Affiliations - Project keywords - Table Content preferences - !","code":"froggeR::write_variables()"},{"path":"/index.html","id":"id_-templated-quarto-documents","dir":"","previous_headings":"Key Features","what":"üìù Templated Quarto Documents","title":"Enhance Quarto Project Workflows and Standards","text":"Create new Quarto documents pre-formatted headers:","code":"froggeR::write_quarto(   filename = \"analysis\",   default = TRUE  # Use variables from _variables.yml )"},{"path":"/index.html","id":"id_Ô∏è-enhanced-git-protection","dir":"","previous_headings":"Key Features","what":"üõ°Ô∏è Enhanced Git Protection","title":"Enhance Quarto Project Workflows and Standards","text":"Set comprehensive .gitignore R projects: Features enhanced data security default: - Ignores R data files (.RData, .rda, .rds) - Excludes common data formats (CSV, Excel, text files) - Protects sensitive information","code":"froggeR::write_ignore()"},{"path":"/index.html","id":"id_-custom-styling","dir":"","previous_headings":"Key Features","what":"üåü Custom Styling","title":"Enhance Quarto Project Workflows and Standards","text":"worrying SCSS template custom look use: Get formatted styles sheet examples : - SCSS defaults - SCSS mixins - SCSS rules Uncomment lines apply document next time render ‚Ä¶‚Äôs just easy!","code":"froggeR::write_scss() /*-- scss:defaults --*/ // Colors // $primary: #2c365e; // $body-bg: #fefefe; // $link-color: $primary; // $code-block-bg: #f8f9fa;  /*-- scss:mixins --*/ // @mixin card-shadow { //   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); //   transition: box-shadow 0.3s ease; //   &:hover { //     box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); //   } // }   /*-- scss:rules --*/ // Custom theme rules // .title-block { //   margin-bottom: 2rem; //   border-bottom: 3px solid $primary; // }  // .callout { //   @include card-shadow; //   padding: 1.25rem; //   margin: 1rem 0; //   border-left: 4px solid $primary; // }  // code { //   color: darken($primary, 10%); //   padding: 0.2em 0.4em; //   border-radius: 3px; // }"},{"path":"/index.html","id":"id_-project-documentation","dir":"","previous_headings":"Key Features","what":"üìö Project Documentation","title":"Enhance Quarto Project Workflows and Standards","text":"Create RStudio project: Generate structured README files: Includes sections : - Project description - Setup instructions - File descriptions - Directory structure - !","code":"froggeR::write_rproj() froggeR::write_readme()"},{"path":[]},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Enhance Quarto Project Workflows and Standards","text":"Contributions welcome! Please feel free submit Pull Request. major changes, please open issue first discuss like change.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Enhance Quarto Project Workflows and Standards","text":"MIT Created Kyle Grealis","code":""},{"path":"/reference/quarto_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom Quarto project ‚Äî quarto_project","title":"Create a custom Quarto project ‚Äî quarto_project","text":"function wrapper quarto::quarto_create_project() adds froggeR goodies. First, new Quarto project created provided name directory. , original .qmd file created quarto::quarto_create_project() replaced froggeR::write_quarto().","code":""},{"path":"/reference/quarto_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"quarto_project(name, base_dir = getwd(), default = TRUE)"},{"path":"/reference/quarto_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom Quarto project ‚Äî quarto_project","text":"name name Quarto project directory initial .qmd file. base_dir Base directory project created. Defaults current working directory. default Set TRUE. use custom YAML within initial. Change FALSE like initial Quarto document standard YAML header. .qmd file. See ?froggeR::write_quarto() details default setting.","code":""},{"path":"/reference/quarto_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom Quarto project ‚Äî quarto_project","text":"Quarto project .qmd, .gitignore, README.md, custom.scss & .Rproj files.","code":""},{"path":"/reference/quarto_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a custom Quarto project ‚Äî quarto_project","text":"Since likely new project directory, froggeR searches existence files creates default: - _variables.yml - .gitignore - README.md - custom.scss - .Rproj files exist, froggeR write new project directory.","code":""},{"path":"/reference/quarto_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new Quarto project that uses a custom formatted YAML header and # all other listed files: quarto_project('new_project', base_dir = getwd(), default = TRUE)  # Create a new Quarto project with generic YAML and all other listed files: quarto_project('new_project_2', base_dir = getwd(), default = FALSE) } # }"},{"path":"/reference/write_ignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an aggressive project .gitignore file ‚Äî write_ignore","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"function designed first check existence .gitignore file. none detected user chooses overwrite current .gitignore, .gitignore downloaded https://gist.githubusercontent.com/RaymondBalise written project level.","code":""},{"path":"/reference/write_ignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"write_ignore(path = getwd())"},{"path":"/reference/write_ignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"path path main project level. Defaults current working directory.","code":""},{"path":"/reference/write_ignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":".gitignore file. substanital upgrades basic .gitignore enhances data security. upgrades include ignoring R's data files (.e.‚Äì .RData, .rda, & .rds) well CSV, Excel, text files. NOTE: Please review contents add pertinent file types appropriate. WARNING: Check organization's data security team using git sensitive protected health information. author assumes liability.","code":""},{"path":"/reference/write_ignore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"if (FALSE) { # \\dontrun{ write_ignore(path = \"path/to/project\") } # }"},{"path":"/reference/write_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a Quarto file with a formatted template header ‚Äî write_quarto","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"function creates new Quarto document pre-formatted YAML header. default template requires _variables.yml file. none exists project, prompt provided create file. _variables.yml allows reusable custom header applied froggeR default-style Quarto documents.","code":""},{"path":"/reference/write_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"","code":"write_quarto(filename = \"new\", path = getwd(), default = TRUE, proj = FALSE)"},{"path":"/reference/write_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"filename name file. include '.qmd' path path main project level. Defaults current working directory. default default set TRUE create Quarto template file pulls infomation folder/_variables.yml file. proj Set TRUE Quarto projects (internal use).","code":""},{"path":"/reference/write_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"Quarto document formatted YAML two blank starter sections.","code":""},{"path":"/reference/write_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"default = TRUE, project path checked SCSS sheet. none found, prompt offers create one. NOTE: Please visit https://quarto.org/docs/output-formats/html-themes.html explore Quarto theming options.","code":""},{"path":"/reference/write_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"","code":"if (FALSE) { # \\dontrun{ # To create new_doc.qmd: write_quarto(filename = \"new_doc\", path = \"path/to/project\") } # }"},{"path":"/reference/write_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project README file ‚Äî write_readme","title":"Create a project README file ‚Äî write_readme","text":"function designed first check existence README file. none detected user chooses overwrite current README, README template downloaded https://gist.github.com/kyleGrealis written project level.","code":""},{"path":"/reference/write_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project README file ‚Äî write_readme","text":"","code":"write_readme(path = getwd())"},{"path":"/reference/write_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project README file ‚Äî write_readme","text":"path path main project level. Defaults current working directory.","code":""},{"path":"/reference/write_readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project README file ‚Äî write_readme","text":"README.md template. Contains sections project description (study name, principle investigator, & author), project setup steps ease portability, project file descriptions, project directory descriptions, miscellaneous. NOTE: documentation remains provide user example descriptions files & directories. highly recommended keep sections. modifiable template tailor-fit exact purpose.","code":""},{"path":"/reference/write_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a project README file ‚Äî write_readme","text":"","code":"if (FALSE) { # \\dontrun{ write_readme(path = \"path/to/project\") } # }"},{"path":"/reference/write_rproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a .Rproj file ‚Äî write_rproj","title":"Create a .Rproj file ‚Äî write_rproj","text":"function creates .Rproj file directory can easily converted RStudio project.","code":""},{"path":"/reference/write_rproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a .Rproj file ‚Äî write_rproj","text":"","code":"write_rproj(name, path = getwd())"},{"path":"/reference/write_rproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a .Rproj file ‚Äî write_rproj","text":"name name project directory. path path main project level. Defaults current working directory.","code":""},{"path":"/reference/write_rproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a .Rproj file ‚Äî write_rproj","text":".Rproj file initialize RStudio project environment.","code":""},{"path":"/reference/write_rproj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a .Rproj file ‚Äî write_rproj","text":"","code":"if (FALSE) { # \\dontrun{ write_rproj(name = \"my_quarto_project\", path = \"path/to/project\") } # }"},{"path":"/reference/write_scss.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Quarto SCSS file ‚Äî write_scss","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"function creates .scss file Quarto project can easily customized SCSS styling variables, mixins, rules.","code":""},{"path":"/reference/write_scss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"write_scss(name = \"custom\", path = getwd())"},{"path":"/reference/write_scss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"name name scss file without extension. path path main project level. Defaults current working directory","code":""},{"path":"/reference/write_scss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Quarto SCSS file ‚Äî write_scss","text":".scss file customize Quarto styling.","code":""},{"path":"/reference/write_scss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"information customizing Quarto documents SCSS, please refer https://quarto.org/docs/output-formats/html-themes.html#customizing-themes https://quarto.org/docs/output-formats/html-themes-.html. really like go rabbit hole: https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss provide 1500 lines SCSS variables!","code":""},{"path":"/reference/write_scss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"if (FALSE) { # \\dontrun{ write_scss(name = \"custom\", path = \"path/to/project\") } # }"},{"path":"/reference/write_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create & write values to _variables.yml ‚Äî write_variables","title":"Create & write values to _variables.yml ‚Äî write_variables","text":"function create variables used froggeR::write_quarto() custom Quarto header. Document authors can easily reuse consistent document structure appearance throughout project. function look existence Quarto project _variables.yml file. one exists, user asked proceed overwrite .","code":""},{"path":"/reference/write_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create & write values to _variables.yml ‚Äî write_variables","text":"","code":"write_variables(path = getwd())"},{"path":"/reference/write_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create & write values to _variables.yml ‚Äî write_variables","text":"path Quarto project name folder. Defaults current working directory.","code":""},{"path":"/reference/write_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create & write values to _variables.yml ‚Äî write_variables","text":"_variables.yml file. described , contents file used custom Quarto header reusability. NOTE: sure inspect contents created. can choose add key:value pairs use Quarto header anywhere else within Quarto document. Refer https://quarto.org/docs/authoring/variables.html details use custom variables. WARNING: Altering names existing key:value pairs may cause unintended consequences, proceed caution!","code":""},{"path":"/reference/write_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create & write values to _variables.yml ‚Äî write_variables","text":"","code":"if (FALSE) { # \\dontrun{ write_variables(path = \"path/to/project\") } # }"}]
