[{"path":"https://kylegrealis.github.io/froggeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Kyle Grealis Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Customizing Quarto with froggeR","text":"One froggeR‚Äôs core strengths ability maintain consistent settings styling across multiple projects. vignette demonstrates set customize Quarto documents using froggeR‚Äôs powerful configuration system.","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"initial-configuration","dir":"Articles","previous_headings":"Setting Up Reusable Options","what":"Initial Configuration","title":"Customizing Quarto with froggeR","text":"froggeR_settings() function manages document settings interactive interface. typically one-time setup benefits future projects: creates configuration file ~/.config/froggeR/config.yml persists across R sessions: Note: Leaving values blank cause errors, modify values carefully. view current settings without modifying , use: settings flow projects order: config.yml stores permanent settings (exact location depends OS) froggeR reads creating new projects Settings populate _variables.yml project Quarto documents use variables automatically froggeR manages settings across projects (config.yml) froggeR manages settings across projects (_variables.yml) Note: can update settings time, users find need set infrequently.","code":"froggeR::froggeR_settings() name: Your Name email: your.email@example.com orcid: 0000-0000-0000-0000         # Optional url: https://github.com/username   # Optional affiliations: Your Institution     # Optional toc: Table of Contents             # Defaults if empty froggeR::froggeR_settings(update = FALSE)"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"using-custom-variables-in-quarto-documents","dir":"Articles","previous_headings":"Setting Up Reusable Options","what":"Using Custom Variables in Quarto Documents","title":"Customizing Quarto with froggeR","text":"froggeR allows use variables _variables.yml file directly Quarto documents: ensures consistency across project documents makes updates easier manage.","code":"--- title: \"My Document\" author: \"{{< var author >}}\" date: \"{{< var date >}}\" ---"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"understanding-scss-structure","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Understanding SCSS Structure","title":"Customizing Quarto with froggeR","text":"write_scss() function creates template three main sections: Basic styling variables Color schemes Font settings Reusable style patterns Custom style functions Specific element styling Custom classes Layout adjustments","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"working-with-comments","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Working with Comments","title":"Customizing Quarto with froggeR","text":"SCSS template uses // commented styles. act like menu styling options: activate style: Remove // start line Save file Re-render document","code":"/*-- scss:defaults --*/ // $primary: #2c365e;          // Main theme color // $body-bg: #fefefe;          // Background color // $link-color: $primary;        // Inherit from primary"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"working-with-multiple-scss-files","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Working with Multiple SCSS Files","title":"Customizing Quarto with froggeR","text":"froggeR allows create manage multiple SCSS files different styling needs: use specific SCSS file Quarto document, update YAML header: froggeR attempt automate revision YAML header. Don‚Äôt dismayed ‚Äì ‚Äôll provide feedback unsuccessful provide example like code block walk step.","code":"froggeR::write_scss(name = \"modern_theme\") froggeR::write_scss(name = \"presentation_theme\") --- title: \"My Document\" format:   html:     theme:       - default       - modern_theme.scss  # Or presentation_theme.scss ---"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"link-color","dir":"Articles","previous_headings":"Document Styling with SCSS > Basic Customization Examples","what":"Link Color","title":"Customizing Quarto with froggeR","text":"‚Äôs example changing default link color assigned $primary color (blue) dark green. Link color styling - Remove // activate change $primary #1e6909: Link color styling - ","code":"/*-- scss:defaults --*/ // These lines are inactive (commented out): // $link-color: $primary; $link-color: #1e69090;"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"theme-colors","dir":"Articles","previous_headings":"Document Styling with SCSS > Basic Customization Examples","what":"Theme Colors","title":"Customizing Quarto with froggeR","text":"custom.scss template includes common color variables:","code":"/*-- scss:defaults --*/ $primary: #1a936f;      // Forest green $body-bg: #f8f9fa;      // Light gray"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"advanced-customization","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Advanced Customization","title":"Customizing Quarto with froggeR","text":"Combine multiple elements sophisticated styling:","code":"/*-- scss:defaults --*/ // First, set your variables $primary: #2c365e; $font-family-monospace: \"Fira Code\", monospace;  /*-- scss:rules --*/ // Then create custom rules .title-block {   margin-bottom: 2rem;   border-bottom: 3px solid $primary;      h1 {     color: darken($primary, 10%);     font-weight: 600;   } }  // Style code elements code {   color: lighten($primary, 10%);   padding: 0.2em 0.4em;   border-radius: 3px; }"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"modern-document-headers","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Modern Document Headers","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:rules --*/ .title-block {   background: linear-gradient(to right, $primary, lighten($primary, 20%));   padding: 2rem;   margin-bottom: 3rem;   color: white;   border-radius: 5px; }"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"enhanced-code-blocks","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Enhanced Code Blocks","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:defaults --*/ $code-block-bg: #f8f9fa; $font-family-monospace: \"Fira Code\", monospace;  /*-- scss:rules --*/ pre {   border-radius: 4px;   box-shadow: 0 2px 4px rgba(0,0,0,0.1);   margin: 1.5em 0; }"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"professional-links","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Professional Links","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:rules --*/ a:not(.nav-link) {   border-bottom: 1px dotted $primary;   text-decoration: none;   transition: all 0.2s ease;      &:hover {     border-bottom: 1px solid $primary;     background-color: rgba($primary, 0.1);   } }"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"settings-issues","dir":"Articles","previous_headings":"Common Issues and Solutions","what":"Settings Issues","title":"Customizing Quarto with froggeR","text":"Restart R session config.yml changes Check _variables.yml exists project Verify YAML structure documents Settings apply new projects Existing projects keep settings Update _variables.yml manually needed","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"styling-problems","dir":"Articles","previous_headings":"Common Issues and Solutions","what":"Styling Problems","title":"Customizing Quarto with froggeR","text":"Styles Applying Verify custom.scss listed YAML theme Check file location (project root) Ensure syntax errors SCSS Try clearing Quarto cache Font Issues Include Google Fonts YAML Check font name spelling Use web-safe fallbacks Variable Scope Define variables scss:defaults Reference variables definition Use proper SCSS syntax ($variable)","code":"format:   html:     mainfont: \"Open Sans\"     monofont: \"Fira Code\"     theme:       - custom.scss"},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"scss-file-management","dir":"Articles","previous_headings":"Common Issues and Solutions","what":"SCSS File Management","title":"Customizing Quarto with froggeR","text":"quarto_project() automatically creates custom.scss write_quarto() uses existing custom.scss available standalone documents, manually create SCSS write_scss()","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional Resources","title":"Customizing Quarto with froggeR","text":"advanced SCSS customization options, visit: Quarto HTML Themes Theme Options Bootstrap Variables","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/customizing-quarto.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Customizing Quarto with froggeR","text":"froggeR streamlines document customization: Set froggeR_settings() Style write_scss() Reuse across projects Update easily needed Happy styling! üê∏ Consistent, professional documents minimal effort","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Get Hopping with froggeR","text":"froggeR streamlines Quarto workflows providing robust, user-friendly framework project setup document creation. vignette demonstrates froggeR can enhance productivity maintaining project consistency.","code":"# Install from GitHub remotes::install_github(\"kyleGrealis/froggeR\")"},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"core-features","dir":"Articles","previous_headings":"","what":"Core Features","title":"Get Hopping with froggeR","text":"Project setup often involves repetitive tasks can impede analysis workflow. froggeR addresses providing: Automated project initialization quarto_project() Configurable document templates via write_quarto() Reusable project configurations froggeR_settings() Consistent styling write_scss() Enhanced version control setup","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"quick-start-guide","dir":"Articles","previous_headings":"","what":"Quick Start Guide","title":"Get Hopping with froggeR","text":"Create new Quarto project single command: command initializes complete project structure necessary components:","code":"froggeR::quarto_project(name = \"frogs\")"},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"project-components","dir":"Articles","previous_headings":"Quick Start Guide","what":"Project Components","title":"Get Hopping with froggeR","text":"Pre-configured YAML header Professional styling Ready immediate use Modern design elements Customizable components Clear documentation .Rproj RStudio integration _variables.yml consistent metadata .gitignore secure version control See vignette(\"customizing-quarto\", package = \"froggeR\") detailed configuration options.","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"document-settings","dir":"Articles","previous_headings":"Customization","what":"Document Settings","title":"Get Hopping with froggeR","text":"Manage document settings interactive configuration tool (see ?froggeR_settings options):","code":"# Configure your settings froggeR::froggeR_settings()  # Create a new document using your settings froggeR::write_quarto(   filename = \"analysis\",   custom_yaml = TRUE  # Use your configured settings )"},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"visual-styling","dir":"Articles","previous_headings":"Customization","what":"Visual Styling","title":"Get Hopping with froggeR","text":"Customize document appearance SCSS: creates custom.scss file commented-examples. Uncomment modify customize document‚Äôs appearance. information Quarto styling, refer : Quarto HTML Themes Customizing Quarto Themes","code":"# Create or modify style sheets froggeR::write_scss(name = \"custom\")"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"project-documentation","dir":"Articles","previous_headings":"Advanced Usage","what":"Project Documentation","title":"Get Hopping with froggeR","text":"Generate comprehensive project documentation: creates: detailed README.md Progress tracking notes Project structure documentation","code":"# Create structured README froggeR::write_readme()"},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Get Hopping with froggeR","text":"optimal results froggeR: Use consistent naming conventions Maintain clear directory structure Document project changes Review .gitignore settings Update progress notes regularly Maintain README documentation Test SCSS changes implementation Document custom styling decisions Use variables consistency","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting and FAQs","what":"Common Issues","title":"Get Hopping with froggeR","text":"Q: YAML isn‚Äôt rendering correctly Quarto document. : Ensure _variables.yml file properly formatted. Check extra spaces incorrect indentation. Q: SCSS styles aren‚Äôt applying document. : Make sure SCSS file properly linked YAML header. Check console error messages rendering. Q: ‚Äôm getting error trying create new project. : Ensure latest version froggeR Quarto installed. Also, check write permissions target directory.","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"tips-for-smooth-hopping","dir":"Articles","previous_headings":"Troubleshooting and FAQs","what":"Tips for Smooth Hopping","title":"Get Hopping with froggeR","text":"Always review generated files project creation ensure everything set expected. customizing SCSS, make small changes render frequently see effects. Keep froggeR settings --date, especially working across multiple projects. specific issues, consult documentation reach GitHub issue tracker.","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Get Hopping with froggeR","text":"Need assistance? Several resources available: Function documentation (e.g., ?write_quarto) GitHub repository Issue tracker bug reports feature requests See vignette(\"customizing-quarto\", package = \"froggeR\") styling details","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"future-developments","dir":"Articles","previous_headings":"","what":"Future Developments","title":"Get Hopping with froggeR","text":"froggeR continuously evolving meet needs R Quarto community. exciting features roadmap include: Quarto Dashboard Integration: Streamlined creation management interactive Quarto dashboards. Enhanced Version Control Integration: robust Git integration features. Expanded Customization Options: Additional templates styling options diverse project needs. Collaborative Tools: Features enhance team workflows project sharing. Stay tuned GitHub repository updates new releases. welcome feature requests feedback user community help shape future froggeR!","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/hopping-into-quarto.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Get Hopping with froggeR","text":"froggeR provides streamlined approach Quarto project management, offering: Efficient project initialization Consistent document styling Secure version control Comprehensive documentation Happy analyzing! üê∏ Elevating Quarto workflow automated excellence","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Quarto Workflow with froggeR","text":"froggeR streamlines Quarto workflow providing two powerful functions: quarto_project() complete project initialization write_quarto() individual document creation. vignette demonstrates use functions effectively work together.","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"complete-project-setup","dir":"Articles","previous_headings":"Project Creation","what":"Complete Project Setup","title":"Quarto Workflow with froggeR","text":"quickest way start new Quarto project: single command creates complete project structure: Project initialization example Project directory structure example new project includes:","code":"froggeR::quarto_project(name = \"frogs\")"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"understanding-project-components","dir":"Articles","previous_headings":"Project Creation","what":"Understanding Project Components","title":"Quarto Workflow with froggeR","text":"component serves specific purpose: Quarto Document (frogs.qmd) Pre-configured YAML header Links styling Ready content Project Settings (_variables.yml) Note: values come froggeR_settings(). can customize settings running froggeR::froggeR_settings() interactively. function allows update author details, contact information, affiliations, document preferences. details, see ?froggeR_settings. Professional defaults Customizable elements Clear documentation Integrated YAML structure example","code":"author: Your Name email: your.email@example.com affiliations: Your Institution"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"basic-document","dir":"Articles","previous_headings":"Individual Document Creation","what":"Basic Document","title":"Quarto Workflow with froggeR","text":"Create new Quarto document existing project: creates frog_analysis.qmd : Formatted YAML header Two starter sections Links project styling","code":"froggeR::write_quarto(   filename = \"frog_analysis\",   custom_yaml = TRUE  # Use settings from _variables.yml )"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"custom-documents","dir":"Articles","previous_headings":"Individual Document Creation","what":"Custom Documents","title":"Quarto Workflow with froggeR","text":"documents without project settings requiring manual changes document YAML:","code":"froggeR::write_quarto(   filename = \"frog_standalone\",   custom_yaml = FALSE  # Basic Quarto template )"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"document-types","dir":"Articles","previous_headings":"Individual Document Creation","what":"Document Types","title":"Quarto Workflow with froggeR","text":"write_quarto() supports two main workflows: Use project settings Include custom styling Maintain consistency Basic Quarto template external dependencies Quick start simple docs Comparison document types custom_yaml = TRUE template leverages project‚Äôs _variables.yml settings, automatically populating author information, styling, metadata. means can focus immediately content creation rather document setup. Conversely, custom_yaml = FALSE provides minimal template need standalone document without project-specific configurations.","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"rendered-output","dir":"Articles","previous_headings":"","what":"Rendered Output","title":"Quarto Workflow with froggeR","text":"Example output custom_yaml document","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"project-level-workflow","dir":"Articles","previous_headings":"Workflow Integration","what":"Project-Level Workflow","title":"Quarto Workflow with froggeR","text":"Best practices project organization: Initial Setup Recommended project structure: Additional Documents Project Structure","code":"# Create new project froggeR::quarto_project(name = \"frogs\") # Add analysis documents froggeR::write_quarto(   filename = \"data_prep\",   custom_yaml = TRUE )  froggeR::write_quarto(   filename = \"analysis\",   custom_yaml = TRUE ) frogs/ ‚îú‚îÄ‚îÄ frogs.qmd ‚îú‚îÄ‚îÄ data_prep.qmd ‚îú‚îÄ‚îÄ analysis.qmd ‚îú‚îÄ‚îÄ _variables.yml ‚îú‚îÄ‚îÄ custom.scss ‚îî‚îÄ‚îÄ README.md"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"document-management","dir":"Articles","previous_headings":"Workflow Integration","what":"Document Management","title":"Quarto Workflow with froggeR","text":"Tips effective document organization: Use descriptive filenames Follow naming convention Consider document order Keep _variables.yml updated Maintain consistent styling Document customizations Commit regularly Update README Track progress Common .gitignore patterns:","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"project-modifications","dir":"Articles","previous_headings":"Common Customizations","what":"Project Modifications","title":"Quarto Workflow with froggeR","text":"Customize project structure: add specialized documents: Note: working froggeR project, write_quarto() automatically uses project‚Äôs _variables.yml settings default, ensuring consistent styling metadata across documents.","code":"froggeR::quarto_project(   name = \"advanced_frogs\",   initialize_project = TRUE  # Include all styling options ) # Data preparation froggeR::write_quarto(filename = \"01_data_prep\")  # Analysis froggeR::write_quarto(filename = \"02_analysis\")  # Results froggeR::write_quarto(filename = \"03_results\")"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"document-customization","dir":"Articles","previous_headings":"Common Customizations","what":"Document Customization","title":"Quarto Workflow with froggeR","text":"Modify individual documents maintaining project consistency: YAML Additions Style Variations Create additional SCSS files Modify existing styles Add document-specific rules","code":"--- title: \"Analysis Results\" author: \"{{< var author >}}\" date: last-modified format:   html:     code-fold: true     toc: true ---"},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Quarto Workflow with froggeR","text":"Common issues solutions: Verify directory permissions Check existing projects Ensure valid project name Confirm _variables.yml exists Check YAML syntax Verify file locations Review SCSS references Check file paths Validate YAML structure","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional Resources","title":"Quarto Workflow with froggeR","text":"information : Quarto documents: vignette(\"customizing-quarto\", package = \"froggeR\") Project styling: See ?write_scss Settings management: See ?froggeR_settings","code":""},{"path":"https://kylegrealis.github.io/froggeR/articles/quarto-workflow.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Quarto Workflow with froggeR","text":"froggeR‚Äôs project workflow provides: Efficient project initialization Consistent document creation Integrated styling Automated setup Professional templates Happy documenting! üê∏ Streamlined Quarto workflows automated excellence","code":""},{"path":"https://kylegrealis.github.io/froggeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Grealis. Author, maintainer.","code":""},{"path":"https://kylegrealis.github.io/froggeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grealis K (2024). froggeR: Enhance Quarto Project Workflows Standards. R package version 0.2.1, https://kylegrealis.github.io/froggeR/.","code":"@Manual{,   title = {froggeR: Enhance Quarto Project Workflows and Standards},   author = {Kyle Grealis},   year = {2024},   note = {R package version 0.2.1},   url = {https://kylegrealis.github.io/froggeR/}, }"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"frogger-","dir":"","previous_headings":"","what":"Enhance Quarto Project Workflows and Standards","title":"Enhance Quarto Project Workflows and Standards","text":"froggeR R package designed streamline creation management Quarto projects. provides suite tools automate setup, ensure consistency, enhance collaboration data science workflows.","code":""},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"why-frogger","dir":"","previous_headings":"","what":"Why froggeR?","title":"Enhance Quarto Project Workflows and Standards","text":"Leap ahead data science journey froggeR! Streamline Quarto workflows, create structured projects, enhance collaboration ease. üê∏ froggeR simplifies project setup can focus matters: Efficiency: Minimize setup time, maximize analysis time Consistency: Uniform styling structure across projects Reliability: Prevent common setup issues occur Security: Robust .gitignore settings enhanced data protection Collaboration: Structured documentation seamless team onboarding Customization: Easy--use tools tailoring project aesthetics Reproducibility: Ensure consistent environments across team members","code":""},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Enhance Quarto Project Workflows and Standards","text":"One-command Quarto project initialization Centralized settings management consistent metadata Automated creation essential project files (README, .gitignore, etc.) Custom YAML SCSS templating unique document styling Interactive setup process user-specific configurations","code":""},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Enhance Quarto Project Workflows and Standards","text":"Install froggeR create first project minutes:","code":"# Install from CRAN... COMING SOON! # install.packages(\"froggeR\")  # Or get the development version remotes::install_github('kyleGrealis/froggeR')  # Create your first froggeR project froggeR::quarto_project('frogs')"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"whos-it-for","dir":"","previous_headings":"","what":"Who‚Äôs it for?","title":"Enhance Quarto Project Workflows and Standards","text":"froggeR ideal R users : Manage multiple Quarto projects Collaborate team environments Prioritize analysis setup complexities Need rapid project initialization  Example rendered Quarto document created froggeR","code":""},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"id_-streamlined-quarto-project-creation","dir":"","previous_headings":"Who‚Äôs it for?","what":"üéØ Streamlined Quarto Project Creation","title":"Enhance Quarto Project Workflows and Standards","text":"Initialize comprehensive Quarto project single command: creates: * Quarto document custom YAML * comprehensive .gitignore * structured README.md * reusable _variables.yml * custom.scss style sheet template * RStudio project file (.Rproj)","code":"froggeR::quarto_project(   name = 'my_new_project',   custom_yaml = TRUE  # Use custom YAML from _variables.yml )"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"id_-centralized-settings-management","dir":"","previous_headings":"Who‚Äôs it for?","what":"üîÑ Centralized Settings Management","title":"Enhance Quarto Project Workflows and Standards","text":"Maintain consistent metadata across documents: Interactively create update _variables.yml : * Author details * Contact information * Affiliations * Project metadata * Document preferences","code":"froggeR::froggeR_settings()"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"id_-templated-quarto-documents","dir":"","previous_headings":"Who‚Äôs it for?","what":"üìù Templated Quarto Documents","title":"Enhance Quarto Project Workflows and Standards","text":"Generate new Quarto documents pre-formatted headers: Automatically excludes: * R data files (.RData, .rda, .rds) * Common data formats (CSV, Excel, text files) * Sensitive information","code":"froggeR::write_quarto(   filename = 'analysis',   custom_yaml = TRUE  # Use variables from _variables.yml ) ### üõ°Ô∏è Enhanced Git Protection  Set up a comprehensive `.gitignore` for R projects:  ```r froggeR::write_ignore()"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"id_-custom-styling-made-easy","dir":"","previous_headings":"Who‚Äôs it for?","what":"üåü Custom Styling Made Easy","title":"Enhance Quarto Project Workflows and Standards","text":"Generate SCSS template custom document styling: Provides formatted stylesheet : * SCSS defaults * SCSS mixins * SCSS rules Customize document‚Äôs appearance uncommenting desired styles.","code":"froggeR::write_scss()"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"id_-automated-project-documentation","dir":"","previous_headings":"Who‚Äôs it for?","what":"üìö Automated Project Documentation","title":"Enhance Quarto Project Workflows and Standards","text":"Generate structured README project: Includes sections : * Project overview * Setup instructions * File directory explanations * Contribution guidelines","code":"froggeR::write_readme()"},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"comparison-with-other-tools","dir":"","previous_headings":"","what":"Comparison with Other Tools","title":"Enhance Quarto Project Workflows and Standards","text":"project management tools R, froggeR stands : Focusing specifically Quarto workflows Providing balance automation customization Offering comprehensive suite tools single package Emphasizing reproducibility collaboration ‚Äôre constantly improving froggeR. Upcoming features include: Quarto dashboard integration Integration version control systems Enhanced team collaboration tools customizable templates various data science workflows","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Enhance Quarto Project Workflows and Standards","text":"‚Äôre open suggestions! ideas new features, please open issue GitHub repository.","code":""},{"path":"https://kylegrealis.github.io/froggeR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Enhance Quarto Project Workflows and Standards","text":"MIT Developed Kyle Grealis","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage froggeR settings ‚Äî froggeR_settings","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"function allows check, display, initialize froggeR settings Quarto documents. Settings stored ~/.config/froggeR/config.yml persistence across froggeR projects.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"","code":"froggeR_settings(update = TRUE)"},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"update Logical. TRUE (default), prompts update existing settings create new ones none exist.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"Invisibly returns current settings list.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"function manages following settings: name: Name (required) email: .email@example.com (required) orcid: 0000-0000-0000-0000 (optional) url: https://github.com/yourUsername (optional) affiliations: Institution (optional) toc: Table Contents (defaults left empty) run interactively update = TRUE, provides menu-driven   interface updating settings. settings exist,   prompt create regardless update parameter.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/froggeR_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"","code":"if (FALSE) { # \\dontrun{   # Update settings (interactive)   froggeR_settings(update = TRUE)    # Load current settings without updating   settings <- froggeR_settings(update = FALSE)   print(settings) } # }"},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom Quarto project ‚Äî quarto_project","title":"Create a custom Quarto project ‚Äî quarto_project","text":"function creates new Quarto project directory additional froggeR features. first calls quarto::quarto_create_project() set basic structure, enhances froggeR-specific files settings.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"quarto_project(name, base_dir = getwd(), custom_yaml = TRUE)"},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom Quarto project ‚Äî quarto_project","text":"name Character string. name Quarto project directory initial .qmd file. base_dir Character string. Base directory project created. Defaults current working directory. custom_yaml Logical. TRUE (default), uses custom YAML header initial .qmd file, populated values '_variables.yml'. FALSE, uses Quarto's standard YAML header.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom Quarto project ‚Äî quarto_project","text":"Invisibly returns path created project directory.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a custom Quarto project ‚Äî quarto_project","text":"function creates Quarto project following enhancements: _variables.yml: Stores reusable YAML variables (custom_yaml = TRUE) .gitignore: Enhanced settings R projects README.md: Template README file dated_progress_notes.md: project progress tracking custom.scss: Custom Quarto styling (custom_yaml = TRUE) .Rproj: RStudio project file froggeR settings exist, prompt create .","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/reference/quarto_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"if (FALSE) { # \\dontrun{   # Create a new Quarto project with custom formatted YAML header   quarto_project('frogs', base_dir = tempdir(), custom_yaml = TRUE)    # Create a new Quarto project with standard Quarto YAML   quarto_project('frogs_standard', base_dir = tempdir(), custom_yaml = FALSE) } # }"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an aggressive project .gitignore file ‚Äî write_ignore","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"function creates updates .gitignore file enhanced security measures designed help prevent accidental data leaks. template includes comprehensive rules common data file types sensitive information.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"write_ignore(path = getwd())"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"path path main project level. Defaults current working directory.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":".gitignore file enhanced security rules. file includes: * R data files (.RData, .rda, .rds) * Common data formats (CSV, Excel, text) * System temporary files * IDE-specific files","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":".gitignore file already exists, user prompted overwriting occurs. template provides substantial security enhancements basic .gitignore files. WARNING: Always consult organization's data security team using git sensitive protected health information (PHI). template helps prevent accidental data exposure considered complete security solution.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_ignore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new temporary directory for the example temp_dir <- tempdir()  # Create new .gitignore write_ignore(path = temp_dir) } # }"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Quarto document ‚Äî write_quarto","title":"Create a new Quarto document ‚Äî write_quarto","text":"function creates new Quarto document (.qmd file) either custom standard YAML header. using custom header, integrates _variables.yml reusable metadata across documents.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Quarto document ‚Äî write_quarto","text":"","code":"write_quarto(   filename = \"frogs\",   path = getwd(),   custom_yaml = TRUE,   initialize_project = FALSE )"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Quarto document ‚Äî write_quarto","text":"filename Character string. name file without '.qmd' extension. letters, numbers, hyphens, underscores allowed. path Character string. directory file created. Defaults current working directory. custom_yaml Logical. TRUE (default), creates Quarto document custom YAML header using values '_variables.yml'. FALSE, creates standard Quarto document basic YAML headers. initialize_project Logical. Set TRUE used within Quarto project (internal use).","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Quarto document ‚Äî write_quarto","text":"Invisibly returns NULL creating Quarto document.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new Quarto document ‚Äî write_quarto","text":"custom_yaml = TRUE initialize_project = FALSE,  function : Create update _variables.yml document metadata Create custom.scss document styling (exist) Create _quarto.yml project configuration (exist) Existing files modified. Quarto styling options, see https://quarto.org/docs/output-formats/html-themes.html. froggeR settings exist custom_yaml = TRUE, function prompt user create settings using froggeR_settings().","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/reference/write_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Quarto document ‚Äî write_quarto","text":"","code":"if (FALSE) { # \\dontrun{   # Create a new Quarto document with custom YAML   write_quarto(filename = \"frog_analysis\", path = tempdir())    # Create a basic Quarto document with standard YAML   write_quarto(filename = \"frog_analysis_basic\", path = tempdir(), custom_yaml = FALSE) } # }"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project README file ‚Äî write_readme","title":"Create a project README file ‚Äî write_readme","text":"function designed first check existence README file. none detected user chooses overwrite current README, README template loaded https://gist.github.com/kyleGrealis written project level.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project README file ‚Äî write_readme","text":"","code":"write_readme(path = getwd())"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project README file ‚Äî write_readme","text":"path path main project level. Defaults current working directory.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project README file ‚Äî write_readme","text":"README.md template. Contains sections : * Project description (study name, principal investigator, & author) * Project setup steps ease portability * Project file descriptions * Project directory descriptions * Miscellaneous","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a project README file ‚Äî write_readme","text":"function handles creation /overwriting README.md dated_progress_notes.md files. file, already exists, user prompted whether overwrite . dated_progress_notes.md file initialized current date \"project started\" message. NOTE: documentation remains provide user example descriptions files & directories. highly recommended keep sections. However, modifiable template tailor-fit exact purpose.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a project README file ‚Äî write_readme","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new temporary directory for the example temp_dir <- tempdir()  write_readme(path = temp_dir) } # }"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Quarto SCSS file ‚Äî write_scss","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"function creates .scss file Quarto project can easily customized SCSS styling variables, mixins, rules. also updates Quarto YAML configuration include new style sheet.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"write_scss(name = \"custom\", path = getwd())"},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"name name scss file without extension. Default name \"custom\". path path main project level. Defaults current working directory","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Quarto SCSS file ‚Äî write_scss","text":".scss file customize Quarto styling. file named \"custom.scss\", function also attempt update Quarto YAML configuration.","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"information customizing Quarto documents SCSS, please refer : * https://quarto.org/docs/output-formats/html-themes.html#customizing-themes * https://quarto.org/docs/output-formats/html-themes-.html * https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss","code":""},{"path":"https://kylegrealis.github.io/froggeR/reference/write_scss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new temporary directory for the example temp_dir <- tempdir()  # Create default custom.scss write_scss(name = \"custom\", path = temp_dir)  # Add another style sheet write_scss(name = \"special_theme\", path = temp_dir) } # }"},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"enhancements-0-2-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"froggeR 0.2.1","text":"Improved write_scss() function streamlined YAML updates Quarto documents. Enhanced user feedback froggeR_settings() function, providing clearer output current settings. Refined error handling user guidance various functions smoother user experience. Updated vignettes comprehensive examples clearer explanations froggeR workflows.","code":""},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"documentation-0-2-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"froggeR 0.2.1","text":"Expanded clarified documentation key functions. Added detailed examples function documentation illustrate various use cases. Updated README additional information package usage benefits.","code":""},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"frogger-020","dir":"Changelog","previous_headings":"","what":"froggeR 0.2.0","title":"froggeR 0.2.0","text":"Renamed default parameter custom_yaml quarto_project() write_quarto() clarity. Refactored froggeR_settings() use YAML configuration storage. Changed settings stored retrieved. Settings now stored ~/.config/froggeR/config.yml. Improved user interaction froggeR_settings() function. Modified quarto_project() write_quarto() use new YAML-based settings. Added .check_settings() function provide user feedback incomplete settings. Updated .update_variables_yml() function handle creation updating _variables.yml. Improved error handling user feedback various functions. Removed load_data() function related utilities. Updated documentation examples reflect new functionality improve clarity. Revised README better explanation package workflow features. Updated pkgdown site structure reflect current package organization.","code":""},{"path":[]},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"major-features-0-1-0","dir":"Changelog","previous_headings":"","what":"Major Features","title":"froggeR 0.1.0","text":"Automated project structure setup Custom YAML integration Built-.gitignore configuration Project documentation templates Author information management Contact details setup Project metadata configuration TOC preferences write_quarto() consistent document creation write_readme() structured project documentation write_ignore() enhanced Git security write_scss() custom styling templates","code":""},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"froggeR 0.1.0","text":"Added comprehensive function documentation Included detailed examples main functions Created structured README clear usage guidelines Added function reference table","code":""},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"project-structure-0-1-0","dir":"Changelog","previous_headings":"","what":"Project Structure","title":"froggeR 0.1.0","text":"Implemented consistent project organization Added template system Quarto documents Created reusable YAML configuration system Added custom SCSS styling templates","code":""},{"path":"https://kylegrealis.github.io/froggeR/news/index.html","id":"security-0-1-0","dir":"Changelog","previous_headings":"","what":"Security","title":"froggeR 0.1.0","text":"Enhanced data protection comprehensive .gitignore settings Added safeguards sensitive data files Implemented security best practices R projects","code":""}]
