[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Kyle Grealis Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/customizing-quarto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Customizing Quarto with froggeR","text":"One froggeR‚Äôs core strengths ability maintain consistent settings styling across multiple projects. vignette demonstrates set customize Quarto documents using froggeR‚Äôs powerful configuration system.","code":""},{"path":[]},{"path":"/articles/customizing-quarto.html","id":"initial-configuration","dir":"Articles","previous_headings":"Setting Up Reusable Options","what":"Initial Configuration","title":"Customizing Quarto with froggeR","text":"froggeR_settings() function manages document settings interactive interface. typically one-time setup benefits future projects: creates entries .Rprofile persist across R sessions: Note: Leaving values blank cause errors, modify values carefully. settings flow projects order: .Rprofile stores permanent settings froggeR reads creating new projects Settings populate _variables.yml project Quarto documents use variables automatically froggeR manages settings across projects (.Rprofile) froggeR manages settings across projects (_variables.yml)","code":"froggeR::froggeR_settings() options(   froggeR.options = list(     name = \"Your Name\",     email = \"your.email@example.com\",     orcid = \"0000-0000-0000-0000\",         # Optional     url = \"https://github.com/username\",   # Optional     affiliations = \"Your Institution\",     # Optional     toc = \"Table of Contents\"              # Defaults if empty   ) )"},{"path":"/articles/customizing-quarto.html","id":"updating-your-settings","dir":"Articles","previous_headings":"Setting Up Reusable Options","what":"Updating Your Settings","title":"Customizing Quarto with froggeR","text":"two options updating settings: Interactive Update Manual Update manual updates: Save .Rprofile file Restart R session New projects use updated settings","code":"froggeR::froggeR_settings()  # Updates all settings interactively usethis::edit_r_profile()    # Edit specific settings directly"},{"path":[]},{"path":"/articles/customizing-quarto.html","id":"understanding-scss-structure","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Understanding SCSS Structure","title":"Customizing Quarto with froggeR","text":"write_scss() function creates template three main sections: Basic styling variables Color schemes Font settings Reusable style patterns Custom style functions Specific element styling Custom classes Layout adjustments","code":""},{"path":"/articles/customizing-quarto.html","id":"working-with-comments","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Working with Comments","title":"Customizing Quarto with froggeR","text":"SCSS template uses // commented styles. act like menu styling options: activate style: Remove // start line Save file Re-render document","code":"/*-- scss:defaults --*/ // $primary: #2c365e;          // Main theme color // $body-bg: #fefefe;          // Background color // $link-color: $primary;        // Inherit from primary"},{"path":[]},{"path":"/articles/customizing-quarto.html","id":"link-color","dir":"Articles","previous_headings":"Document Styling with SCSS > Basic Customization Examples","what":"Link Color","title":"Customizing Quarto with froggeR","text":"‚Äôs example changing default link color assigned $primary color (blue) dark green. Link color styling - Remove // activate change $primary #1e6909: Link color styling - ","code":"/*-- scss:defaults --*/ // These lines are inactive (commented out): // $link-color: $primary; $link-color: #1e69090;"},{"path":"/articles/customizing-quarto.html","id":"theme-colors","dir":"Articles","previous_headings":"Document Styling with SCSS > Basic Customization Examples","what":"Theme Colors","title":"Customizing Quarto with froggeR","text":"custom.scss template includes common color variables:","code":"/*-- scss:defaults --*/ $primary: #1a936f;      // Forest green $body-bg: #f8f9fa;      // Light gray"},{"path":"/articles/customizing-quarto.html","id":"advanced-customization","dir":"Articles","previous_headings":"Document Styling with SCSS","what":"Advanced Customization","title":"Customizing Quarto with froggeR","text":"Combine multiple elements sophisticated styling:","code":"/*-- scss:defaults --*/ // First, set your variables $primary: #2c365e; $font-family-monospace: \"Fira Code\", monospace;  /*-- scss:rules --*/ // Then create custom rules .title-block {   margin-bottom: 2rem;   border-bottom: 3px solid $primary;      h1 {     color: darken($primary, 10%);     font-weight: 600;   } }  // Style code elements code {   color: lighten($primary, 10%);   padding: 0.2em 0.4em;   border-radius: 3px; }"},{"path":[]},{"path":"/articles/customizing-quarto.html","id":"modern-document-headers","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Modern Document Headers","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:rules --*/ .title-block {   background: linear-gradient(to right, $primary, lighten($primary, 20%));   padding: 2rem;   margin-bottom: 3rem;   color: white;   border-radius: 5px; }"},{"path":"/articles/customizing-quarto.html","id":"enhanced-code-blocks","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Enhanced Code Blocks","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:defaults --*/ $code-block-bg: #f8f9fa; $font-family-monospace: \"Fira Code\", monospace;  /*-- scss:rules --*/ pre {   border-radius: 4px;   box-shadow: 0 2px 4px rgba(0,0,0,0.1);   margin: 1.5em 0; }"},{"path":"/articles/customizing-quarto.html","id":"professional-links","dir":"Articles","previous_headings":"Quick Styling Recipes","what":"Professional Links","title":"Customizing Quarto with froggeR","text":"","code":"/*-- scss:rules --*/ a:not(.nav-link) {   border-bottom: 1px dotted $primary;   text-decoration: none;   transition: all 0.2s ease;      &:hover {     border-bottom: 1px solid $primary;     background-color: rgba($primary, 0.1);   } }"},{"path":[]},{"path":"/articles/customizing-quarto.html","id":"styling-problems","dir":"Articles","previous_headings":"Common Issues and Solutions","what":"Styling Problems","title":"Customizing Quarto with froggeR","text":"Styles Applying Verify custom.scss listed YAML theme Check file location (project root) Ensure syntax errors SCSS Try clearing Quarto cache Font Issues Include Google Fonts YAML Check font name spelling Use web-safe fallbacks Variable Scope Define variables scss:defaults Reference variables definition Use proper SCSS syntax ($variable)","code":"format:   html:     mainfont: \"Open Sans\"     monofont: \"Fira Code\"     theme:       - custom.scss"},{"path":"/articles/customizing-quarto.html","id":"settings-issues","dir":"Articles","previous_headings":"Common Issues and Solutions","what":"Settings Issues","title":"Customizing Quarto with froggeR","text":"Restart R session .Rprofile changes Check _variables.yml exists project Verify YAML structure documents Settings apply new projects Existing projects keep settings Update _variables.yml manually needed","code":""},{"path":"/articles/customizing-quarto.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional Resources","title":"Customizing Quarto with froggeR","text":"advanced SCSS customization options, visit: Quarto HTML Themes Theme Options Bootstrap Variables","code":""},{"path":"/articles/customizing-quarto.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Customizing Quarto with froggeR","text":"froggeR streamlines document customization: Set froggeR_settings() Style write_scss() Reuse across projects Update easily needed Happy styling! üê∏ Consistent, professional documents minimal effort","code":""},{"path":"/articles/hopping-into-quarto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Get Hopping with froggeR","text":"froggeR streamlines Quarto workflows providing robust, user-friendly framework project setup document creation. vignette demonstrates froggeR can enhance productivity maintaining project consistency.","code":"# Install from GitHub remotes::install_github(\"kyleGrealis/froggeR\")"},{"path":"/articles/hopping-into-quarto.html","id":"core-features","dir":"Articles","previous_headings":"","what":"Core Features","title":"Get Hopping with froggeR","text":"Project setup often involves repetitive tasks can impede analysis workflow. froggeR addresses providing: Automated project initialization quarto_project() Configurable document templates via write_quarto() Reusable project configurations froggeR_settings() Consistent styling write_scss() Enhanced version control setup","code":""},{"path":"/articles/hopping-into-quarto.html","id":"quick-start-guide","dir":"Articles","previous_headings":"","what":"Quick Start Guide","title":"Get Hopping with froggeR","text":"Create new Quarto project single command: command initializes complete project structure necessary components:","code":"froggeR::quarto_project(name = \"frogs\")"},{"path":"/articles/hopping-into-quarto.html","id":"project-components","dir":"Articles","previous_headings":"Quick Start Guide","what":"Project Components","title":"Get Hopping with froggeR","text":"Pre-configured YAML header Professional styling Ready immediate use Modern design elements Customizable components Clear documentation .Rproj RStudio integration _variables.yml consistent metadata .gitignore secure version control See vignette(\"customizing-quarto\", package = \"froggeR\") detailed configuration options.","code":""},{"path":[]},{"path":"/articles/hopping-into-quarto.html","id":"document-settings","dir":"Articles","previous_headings":"Customization","what":"Document Settings","title":"Get Hopping with froggeR","text":"Manage document settings interactive configuration tool (see ?froggeR_settings options):","code":"# Configure your settings froggeR::froggeR_settings()  # Create a new document using your settings froggeR::write_quarto(   filename = \"analysis\",   default = TRUE  # Use your configured settings )"},{"path":"/articles/hopping-into-quarto.html","id":"visual-styling","dir":"Articles","previous_headings":"Customization","what":"Visual Styling","title":"Get Hopping with froggeR","text":"Customize document appearance SCSS (see ?write_scss examples): Example SCSS customizations:","code":"# Create or modify style sheets froggeR::write_scss(name = \"custom\") /*-- scss:defaults --*/ // Modern color scheme $primary: #2c365e; $body-bg: #fefefe; $link-color: $primary;  /*-- scss:rules --*/ .title-block {   margin-bottom: 2rem;   border-bottom: 3px solid $primary; }"},{"path":[]},{"path":"/articles/hopping-into-quarto.html","id":"project-documentation","dir":"Articles","previous_headings":"Advanced Usage","what":"Project Documentation","title":"Get Hopping with froggeR","text":"Generate comprehensive project documentation: creates: detailed README.md Progress tracking notes Project structure documentation","code":"# Create structured README froggeR::write_readme()"},{"path":"/articles/hopping-into-quarto.html","id":"data-management","dir":"Articles","previous_headings":"Advanced Usage","what":"Data Management","title":"Get Hopping with froggeR","text":"Efficiently load multiple data files: Supported formats include: R data files (.rda, .RData, .rds) Statistical software files (.sas7bdat, .dta, .sav) Common data formats (.csv, .xlsx)","code":"# Load all supported files from a directory froggeR::load_data(   directory_path = \"project/data\",   recursive = TRUE  # Include subdirectories )"},{"path":"/articles/hopping-into-quarto.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Get Hopping with froggeR","text":"optimal results froggeR: Use consistent naming conventions Maintain clear directory structure Document project changes Review .gitignore settings Update progress notes regularly Maintain README documentation Test SCSS changes implementation Document custom styling decisions Use variables consistency","code":""},{"path":"/articles/hopping-into-quarto.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Get Hopping with froggeR","text":"Need assistance? Several resources available: Function documentation (e.g., ?write_quarto) GitHub repository Issue tracker bug reports feature requests See vignette(\"customizing-quarto\", package = \"froggeR\") styling details","code":""},{"path":"/articles/hopping-into-quarto.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Get Hopping with froggeR","text":"froggeR provides streamlined approach Quarto project management, offering: Efficient project initialization Consistent document styling Secure version control Comprehensive documentation Happy analyzing! üê∏ Elevating Quarto workflow automated excellence","code":""},{"path":"/articles/quarto-workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction üê∏","title":"Quarto Workflow with froggeR","text":"froggeR streamlines Quarto workflow providing two powerful functions: quarto_project() complete project initialization write_quarto() individual document creation. vignette demonstrates use functions effectively work together.","code":""},{"path":[]},{"path":"/articles/quarto-workflow.html","id":"complete-project-setup","dir":"Articles","previous_headings":"Project Creation","what":"Complete Project Setup","title":"Quarto Workflow with froggeR","text":"quickest way start new Quarto project: single command creates complete project structure: Project initialization example Project directory structure example new project includes:","code":"froggeR::quarto_project(name = \"frogs\")"},{"path":"/articles/quarto-workflow.html","id":"understanding-project-components","dir":"Articles","previous_headings":"Project Creation","what":"Understanding Project Components","title":"Quarto Workflow with froggeR","text":"component serves specific purpose: Quarto Document (frogs.qmd) Pre-configured YAML header Links styling Ready content Project Settings (_variables.yml) Note: values come froggeR_settings() Professional defaults Customizable elements Clear documentation Integrated YAML structure example","code":"author: Your Name email: your.email@example.com affiliations: Your Institution"},{"path":[]},{"path":"/articles/quarto-workflow.html","id":"basic-document","dir":"Articles","previous_headings":"Individual Document Creation","what":"Basic Document","title":"Quarto Workflow with froggeR","text":"Create new Quarto document existing project: creates frog_analysis.qmd : Formatted YAML header Two starter sections Links project styling","code":"froggeR::write_quarto(   filename = \"frog_analysis\",   default = TRUE  # Use settings from _variables.yml )"},{"path":"/articles/quarto-workflow.html","id":"custom-documents","dir":"Articles","previous_headings":"Individual Document Creation","what":"Custom Documents","title":"Quarto Workflow with froggeR","text":"documents without project settings requiring manual changes document YAML:","code":"froggeR::write_quarto(   filename = \"frog_standalone\",   default = FALSE  # Basic Quarto template )"},{"path":"/articles/quarto-workflow.html","id":"document-types","dir":"Articles","previous_headings":"Individual Document Creation","what":"Document Types","title":"Quarto Workflow with froggeR","text":"write_quarto() supports two main workflows: Use project settings Include custom styling Maintain consistency Basic Quarto template external dependencies Quick start simple docs Comparison document types default = TRUE template leverages project‚Äôs _variables.yml settings, automatically populating author information, styling, metadata. means can focus immediately content creation rather document setup. Conversely, default = FALSE provides minimal template need standalone document without project-specific configurations.","code":""},{"path":"/articles/quarto-workflow.html","id":"rendered-output","dir":"Articles","previous_headings":"","what":"Rendered Output","title":"Quarto Workflow with froggeR","text":"Example output ‚Äúdefault‚Äù document","code":""},{"path":[]},{"path":"/articles/quarto-workflow.html","id":"project-level-workflow","dir":"Articles","previous_headings":"Workflow Integration","what":"Project-Level Workflow","title":"Quarto Workflow with froggeR","text":"Best practices project organization: Initial Setup Recommended project structure: Additional Documents Project Structure","code":"# Create new project froggeR::quarto_project(name = \"frogs\") # Add analysis documents froggeR::write_quarto(   filename = \"data_prep\",   default = TRUE )  froggeR::write_quarto(   filename = \"analysis\",   default = TRUE ) frogs/ ‚îú‚îÄ‚îÄ frogs.qmd ‚îú‚îÄ‚îÄ data_prep.qmd ‚îú‚îÄ‚îÄ analysis.qmd ‚îú‚îÄ‚îÄ _variables.yml ‚îú‚îÄ‚îÄ custom.scss ‚îî‚îÄ‚îÄ README.md"},{"path":"/articles/quarto-workflow.html","id":"document-management","dir":"Articles","previous_headings":"Workflow Integration","what":"Document Management","title":"Quarto Workflow with froggeR","text":"Tips effective document organization: Use descriptive filenames Follow naming convention Consider document order Keep _variables.yml updated Maintain consistent styling Document customizations Commit regularly Update README Track progress Common .gitignore patterns:","code":""},{"path":[]},{"path":"/articles/quarto-workflow.html","id":"project-modifications","dir":"Articles","previous_headings":"Common Customizations","what":"Project Modifications","title":"Quarto Workflow with froggeR","text":"Customize project structure: add specialized documents: Note: working froggeR project, write_quarto() automatically uses project‚Äôs _variables.yml settings default, ensuring consistent styling metadata across documents.","code":"froggeR::quarto_project(   name = \"advanced_frogs\",   default = TRUE  # Include all styling options ) # Data preparation froggeR::write_quarto(filename = \"01_data_prep\")  # Analysis froggeR::write_quarto(filename = \"02_analysis\")  # Results froggeR::write_quarto(filename = \"03_results\")"},{"path":"/articles/quarto-workflow.html","id":"document-customization","dir":"Articles","previous_headings":"Common Customizations","what":"Document Customization","title":"Quarto Workflow with froggeR","text":"Modify individual documents maintaining project consistency: YAML Additions Style Variations Create additional SCSS files Modify existing styles Add document-specific rules","code":"--- title: \"Analysis Results\" author: \"{{< var author >}}\" date: last-modified format:   html:     code-fold: true     toc: true ---"},{"path":"/articles/quarto-workflow.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Quarto Workflow with froggeR","text":"Common issues solutions: Verify directory permissions Check existing projects Ensure valid project name Confirm _variables.yml exists Check YAML syntax Verify file locations Review SCSS references Check file paths Validate YAML structure","code":""},{"path":"/articles/quarto-workflow.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional Resources","title":"Quarto Workflow with froggeR","text":"information : Quarto documents: vignette(\"customizing-quarto\", package = \"froggeR\") Project styling: See ?write_scss Settings management: See ?froggeR_settings","code":""},{"path":"/articles/quarto-workflow.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Quarto Workflow with froggeR","text":"froggeR‚Äôs project workflow provides: Efficient project initialization Consistent document creation Integrated styling Automated setup Professional templates Happy documenting! üê∏ Streamlined Quarto workflows automated excellence","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Grealis. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grealis K (2024). froggeR: Enhance Quarto Project Workflows Standards. R package version 0.1.0, https://github.com/kyleGrealis/froggeR.","code":"@Manual{,   title = {froggeR: Enhance Quarto Project Workflows and Standards},   author = {Kyle Grealis},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/kyleGrealis/froggeR}, }"},{"path":[]},{"path":"/index.html","id":"why-frogger","dir":"","previous_headings":"","what":"Why froggeR?","title":"Enhance Quarto Project Workflows and Standards","text":"Leap ahead data science journey froggeR! Streamline Quarto workflows, catch setup bugs happen, create structured projects make sharing collaboration breeze. üê∏ project setup simple üê∏ Jump Right : Spend time analysis, less time setup Consistency: Maintain uniform document styling structure across projects Setup Bugs: Complex configs unnecessary can reduce efficiency Safety: Enhanced data protection comprehensive .gitignore settings Friendly Whole Team: Easier team onboarding structured documentation","code":""},{"path":"/index.html","id":"whos-it-for","dir":"","previous_headings":"","what":"Who‚Äôs it for?","title":"Enhance Quarto Project Workflows and Standards","text":"froggeR especially valuable R users : Juggle multiple Quarto projects Collaborate team members Want focus analysis, setup Need quick way start new projects","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Enhance Quarto Project Workflows and Standards","text":"can install froggeR GitHub:","code":"# install.packages(\"remotes\") remotes::install_github('kyleGrealis/froggeR')  # or the development version remotes::install_github('kyleGrealis/froggeR@dev')"},{"path":[]},{"path":"/index.html","id":"id_-enhanced-quarto-project-creation","dir":"","previous_headings":"Key Features","what":"üéØ Enhanced Quarto Project Creation","title":"Enhance Quarto Project Workflows and Standards","text":"quarto_project() function supercharges project setup: creates new Quarto project : custom YAML-enabled .qmd file comprehensive .gitignore structured README.md reusable _variables.yml template custom.scss style sheet .Rproj file","code":"froggeR::quarto_project(   name = \"my_new_project\",   default = TRUE  # Use custom YAML from _variables.yml )"},{"path":"/index.html","id":"id_-reusable-yaml-headers","dir":"","previous_headings":"Key Features","what":"üîÑ Reusable YAML Headers","title":"Enhance Quarto Project Workflows and Standards","text":"Maintain consistency across documents froggeR_settings(): interactive function helps create _variables.yml file containing: Author information Contact details Affiliations Project keywords Table Content preferences !","code":"froggeR::froggeR_settings()"},{"path":"/index.html","id":"id_-templated-quarto-documents","dir":"","previous_headings":"Key Features","what":"üìù Templated Quarto Documents","title":"Enhance Quarto Project Workflows and Standards","text":"Create new Quarto documents pre-formatted headers:","code":"froggeR::write_quarto(   filename = \"analysis\",   default = TRUE  # Use variables from _variables.yml )"},{"path":"/index.html","id":"id_Ô∏è-enhanced-git-protection","dir":"","previous_headings":"Key Features","what":"üõ°Ô∏è Enhanced Git Protection","title":"Enhance Quarto Project Workflows and Standards","text":"Set comprehensive .gitignore R projects: Features enhanced data security default: Ignores R data files (.RData, .rda, .rds) Excludes common data formats (CSV, Excel, text files) Protects sensitive information","code":"froggeR::write_ignore()"},{"path":"/index.html","id":"id_-custom-styling","dir":"","previous_headings":"Key Features","what":"üåü Custom Styling","title":"Enhance Quarto Project Workflows and Standards","text":"worrying SCSS template custom look use: Get formatted styles sheet examples : SCSS defaults SCSS mixins SCSS rules Uncomment lines apply document next time render ‚Ä¶‚Äôs just easy!","code":"froggeR::write_scss() /*-- scss:defaults --*/ // Colors // $primary: #2c365e; // $body-bg: #fefefe; // $link-color: $primary; // Fonts // $font-family-sans-serif: \"Open Sans\", sans-serif; // $font-family-monospace: \"Source Code Pro\", monospace; // // /*-- scss:mixins --*/ // // /*-- scss:rules --*/ // Custom theme rules // .title-block {{ //   margin-bottom: 2rem; //   border-bottom: 3px solid $primary; // }} // // code {{ //   color: darken($primary, 10%); //   padding: 0.2em 0.4em; //   border-radius: 3px; // }}"},{"path":"/index.html","id":"id_-project-documentation","dir":"","previous_headings":"Key Features","what":"üìö Project Documentation","title":"Enhance Quarto Project Workflows and Standards","text":"Generate structured README files: Includes sections : Project description Setup instructions File descriptions Directory structure !","code":"froggeR::write_readme()"},{"path":[]},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Enhance Quarto Project Workflows and Standards","text":"Contributions welcome! Please feel free submit Pull Request. major changes, please open issue first discuss like change.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Enhance Quarto Project Workflows and Standards","text":"MIT Created Kyle Grealis","code":""},{"path":"/reference/froggeR_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage froggeR settings ‚Äî froggeR_settings","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"Check, display, initialize froggeR settings Quarto documents. Settings stored .Rprofile persistence made available immediately current session.","code":""},{"path":"/reference/froggeR_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"","code":"froggeR_settings(interactive = TRUE)"},{"path":"/reference/froggeR_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"interactive TRUE (default), provides menu-driven interface. Set FALSE non-interactive use functions.","code":""},{"path":"/reference/froggeR_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"Invisibly returns current settings list","code":""},{"path":"/reference/froggeR_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"run interactively, provides menu : * Check current settings * Initialize settings (first-time setup) * Get help updating settings * Cancel settings created, : * Stored .Rprofile persistence across sessions * Made available immediately current session * Used populate Quarto document variables following added .Rprofile settings saved:","code":"options(   froggeR.options = list(     name = \"Your Name\",     email = \"your.email@example.com\",     orcid = \"0000-0000-0000-0000\",  # optional     url = \"https://github.com/username\",  # optional     affiliations = \"Your Institution\",  # optional     toc = \"Table of Contents\"  # defaults if empty   ) )"},{"path":"/reference/froggeR_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage froggeR settings ‚Äî froggeR_settings","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive menu for users froggeR_settings()  # Get current settings settings <- froggeR_settings(interactive = FALSE) } # }"},{"path":"/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Multiple Data Files into Environment ‚Äî load_data","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"function loads supported data files directory directly R environment. automatically detects file types provides progress feedback loading.","code":""},{"path":"/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"","code":"load_data(   directory_path,   recursive = TRUE,   pattern = NULL,   loader_function = NULL,   envir = parent.frame() )"},{"path":"/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"directory_path Character string specifying path directory containing data files. recursive Logical indicating whether search files recursively subdirectories. Default TRUE. pattern Optional character string containing regular expression match specific files. provided, overrides automatic file type detection. loader_function Optional custom function use loading files. Must take file path input return data frame. envir Environment loaded datasets placed. Default caller's environment.","code":""},{"path":"/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"Invisibly returns NULL. Files loaded directly specified   environment.","code":""},{"path":"/reference/load_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"function automatically detects loads following file types: * .rda/.RData - load * .rds - readRDS * .sas7bdat - haven::read_sas * .csv - readr::read_csv * .xlsx - readxl::read_excel * .dta - haven::read_stata * .sav - haven::read_spss File names converted valid R object names using make.names().","code":""},{"path":"/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Multiple Data Files into Environment ‚Äî load_data","text":"","code":"if (FALSE) { # \\dontrun{ # Load all supported files from a directory load_data(\"path/to/data\")  # Load files matching a specific pattern load_data(\"path/to/files\", pattern = \"^prefix.*\")  # Use custom loader function my_loader <- function(file) {   read_csv(file, col_types = cols()) } load_data(\"path/to/files\", loader_function = my_loader) } # }"},{"path":"/reference/quarto_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom Quarto project ‚Äî quarto_project","title":"Create a custom Quarto project ‚Äî quarto_project","text":"function wrapper quarto::quarto_create_project() adds froggeR goodies. First, new Quarto project created provided name directory. , original .qmd file created quarto::quarto_create_project() replaced froggeR::write_quarto().","code":""},{"path":"/reference/quarto_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"quarto_project(name, base_dir = getwd(), default = TRUE)"},{"path":"/reference/quarto_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom Quarto project ‚Äî quarto_project","text":"name name Quarto project directory initial .qmd file. base_dir Base directory project created. Defaults current working directory. default Set TRUE. use custom YAML within initial .qmd file. Change FALSE like initial Quarto document standard YAML header. See ?froggeR::write_quarto() details default setting.","code":""},{"path":"/reference/quarto_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom Quarto project ‚Äî quarto_project","text":"Quarto project : * .qmd * .gitignore * README.md * DATED_PROGRESS_NOTES.md * custom.scss * .Rproj","code":""},{"path":"/reference/quarto_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a custom Quarto project ‚Äî quarto_project","text":"Since likely new project directory, froggeR searches existence files creates default: * _variables.yml * .gitignore * README.md * dated_progress_notes.md * custom.scss * .Rproj files exist, froggeR write new project directory.","code":""},{"path":"/reference/quarto_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom Quarto project ‚Äî quarto_project","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new Quarto project that uses a custom formatted YAML header and # all other listed files: quarto_project('frog_project', base_dir = getwd(), default = TRUE)  # Create a new Quarto project with generic YAML and all other listed files: quarto_project('frog_project_2', base_dir = getwd(), default = FALSE) } # }"},{"path":"/reference/write_ignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an aggressive project .gitignore file ‚Äî write_ignore","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"function creates updates .gitignore file enhanced security measures designed help prevent accidental data leaks. template includes comprehensive rules common data file types sensitive information.","code":""},{"path":"/reference/write_ignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"write_ignore(path = getwd())"},{"path":"/reference/write_ignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"path path main project level. Defaults current working directory.","code":""},{"path":"/reference/write_ignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":".gitignore file enhanced security rules. file includes: * R data files (.RData, .rda, .rds) * Common data formats (CSV, Excel, text) * System temporary files * IDE-specific files","code":""},{"path":"/reference/write_ignore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":".gitignore file already exists, user prompted overwriting occurs. template provides substantial security enhancements basic .gitignore files. WARNING: Always consult organization's data security team using git sensitive protected health information (PHI). template helps prevent accidental data exposure considered complete security solution.","code":""},{"path":"/reference/write_ignore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an aggressive project .gitignore file ‚Äî write_ignore","text":"","code":"if (FALSE) { # \\dontrun{ # Create new .gitignore write_ignore(path = \"path/to/project\") } # }"},{"path":"/reference/write_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a Quarto file with a formatted template header ‚Äî write_quarto","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"function creates new Quarto document pre-formatted YAML header. default template requires _variables.yml file. none exists project, created. _variables.yml allows reusable custom header applied froggeR default-style Quarto documents.","code":""},{"path":"/reference/write_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"","code":"write_quarto(   filename = \"frogs\",   path = getwd(),   default = TRUE,   is_project = FALSE )"},{"path":"/reference/write_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"filename name file without '.qmd' extension. letters, numbers, hyphens, underscores allowed. path path main project level. Defaults current working directory. default default set TRUE create Quarto template file pulls information folder/_variables.yml file. is_project Set TRUE used within Quarto project (internal use).","code":""},{"path":"/reference/write_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"Creates new Quarto document formatted YAML two blank starter sections. Returns invisible(NULL).","code":""},{"path":"/reference/write_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"default = TRUE, function create verify existence : * _variables.yml - document metadata * custom.scss - document styling * _quarto.yml - project configuration files already exist, modified. styling options, visit https://quarto.org/docs/output-formats/html-themes.html.","code":""},{"path":"/reference/write_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Quarto file with a formatted template header ‚Äî write_quarto","text":"","code":"if (FALSE) { # \\dontrun{ # Create a new Quarto document with default settings write_quarto(filename = \"frogs\", path = \"path/to/project\")  # Create a basic Quarto document without custom formatting write_quarto(filename = \"simple_doc\", default = FALSE) } # }"},{"path":"/reference/write_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project README file ‚Äî write_readme","title":"Create a project README file ‚Äî write_readme","text":"function designed first check existence README file. none detected user chooses overwrite current README, README template loaded https://gist.github.com/kyleGrealis written project level.","code":""},{"path":"/reference/write_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project README file ‚Äî write_readme","text":"","code":"write_readme(path = getwd())"},{"path":"/reference/write_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project README file ‚Äî write_readme","text":"path path main project level. Defaults current working directory.","code":""},{"path":"/reference/write_readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project README file ‚Äî write_readme","text":"README.md template. Contains sections : * Project description (study name, principal investigator, & author) * Project setup steps ease portability * Project file descriptions * Project directory descriptions * Miscellaneous","code":""},{"path":"/reference/write_readme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a project README file ‚Äî write_readme","text":"function handles creation /overwriting README.md dated_progress_notes.md files. file, already exists, user prompted whether overwrite . dated_progress_notes.md file initialized current date \"project started\" message. NOTE: documentation remains provide user example descriptions files & directories. highly recommended keep sections. However, modifiable template tailor-fit exact purpose.","code":""},{"path":"/reference/write_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a project README file ‚Äî write_readme","text":"","code":"if (FALSE) { # \\dontrun{ write_readme(path = \"path/to/project\") } # }"},{"path":"/reference/write_scss.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Quarto SCSS file ‚Äî write_scss","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"function creates .scss file Quarto project can easily customized SCSS styling variables, mixins, rules. also updates Quarto YAML configuration include new style sheet.","code":""},{"path":"/reference/write_scss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"write_scss(name = \"custom\", path = getwd())"},{"path":"/reference/write_scss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"name name scss file without extension. Default name \"custom\". path path main project level. Defaults current working directory","code":""},{"path":"/reference/write_scss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Quarto SCSS file ‚Äî write_scss","text":".scss file customize Quarto styling. file named \"custom.scss\", function also attempt update Quarto YAML configuration.","code":""},{"path":"/reference/write_scss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"information customizing Quarto documents SCSS, please refer : * https://quarto.org/docs/output-formats/html-themes.html#customizing-themes * https://quarto.org/docs/output-formats/html-themes-.html * https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss","code":""},{"path":"/reference/write_scss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Quarto SCSS file ‚Äî write_scss","text":"","code":"if (FALSE) { # \\dontrun{ # Create default custom.scss write_scss(name = \"custom\", path = \"path/to/project\")  # Add another style sheet write_scss(name = \"special_theme\", path = \"path/to/project\") } # }"},{"path":[]},{"path":"/news/index.html","id":"major-features-0-1-0","dir":"Changelog","previous_headings":"","what":"Major Features","title":"froggeR 0.1.0","text":"Automated project structure setup Custom YAML integration Built-.gitignore configuration Project documentation templates Author information management Contact details setup Project metadata configuration TOC preferences write_quarto() consistent document creation write_readme() structured project documentation write_ignore() enhanced Git security write_scss() custom styling templates","code":""},{"path":"/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"froggeR 0.1.0","text":"Added comprehensive function documentation Included detailed examples main functions Created structured README clear usage guidelines Added function reference table","code":""},{"path":"/news/index.html","id":"project-structure-0-1-0","dir":"Changelog","previous_headings":"","what":"Project Structure","title":"froggeR 0.1.0","text":"Implemented consistent project organization Added template system Quarto documents Created reusable YAML configuration system Added custom SCSS styling templates","code":""},{"path":"/news/index.html","id":"security-0-1-0","dir":"Changelog","previous_headings":"","what":"Security","title":"froggeR 0.1.0","text":"Enhanced data protection comprehensive .gitignore settings Added safeguards sensitive data files Implemented security best practices R projects","code":""}]
